name: Docker Build

on:
  workflow_call:

jobs:
  docker-build:
    runs-on: ubuntu-latest

    env:
      REGISTRY_URL: ${{ vars.REGISTRY_URL }}
      REGISTRY_PROJECT: ${{ vars.REGISTRY_PROJECT }}
      REGISTRY_USERNAME: ${{ vars.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      IMAGE_NAME: ${{ vars.REGISTRY_URL }}/${{ vars.REGISTRY_PROJECT }}/chill-on-da
      TAG_BRANCH: "latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: Log into registry ${{ env.HARBOR_URL }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Create temp repository for image
        run: |-
          mkdir -p /tmp/images

      - name: Build and Export Docker image
        id: build-and-export
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          outputs: type=docker,dest=/tmp/images/output.tar

      - name: Tag and push Docker image
        id: tag-and-push
        run: |-
          IMAGE_NAME=${{ env.IMAGE_NAME }}
          IMAGE_TAG_BUILD=$IMAGE_NAME:${{ github.sha }}
          
          docker load --input /tmp/images/output.tar

          IMAGE_TAG=$IMAGE_NAME:latest
          docker tag $IMAGE_TAG_BUILD $IMAGE_TAG
          docker push $IMAGE_TAG
          echo "Pushed image with tag $IMAGE_TAG"